<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Simple Web App - Resume Generator</title>
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      margin: 0;
      padding: 0;
      background: linear-gradient(to right, #ffd9b3, #2f2f2f);
      color: #333;
      transition: background 0.5s ease;
    }

    header {
      background-color: #ff8c1a; /* light orange */
      color: white;
      padding: 1rem;
      text-align: center;
      font-weight: 700;
      font-size: 1.8rem;
      letter-spacing: 1px;
    }

    nav {
      background-color: #222; /* dark black */
      padding: 0.7rem;
      text-align: center;
      display: flex;
      justify-content: center;
      gap: 3rem;
    }

    nav a {
      color: white;
      text-decoration: none;
      font-size: 1.1rem;
      font-weight: 600;
      cursor: pointer;
      display: flex;
      align-items: center;
      gap: 6px;
      transition: color 0.3s ease;
    }

    nav a:hover {
      color: #ff8c1a;
    }

    /* Icon colors */
    nav a.home-icon svg path {
      fill: #ff6600; /* bright orange */
    }

    nav a.about-icon svg path {
      fill: #cccccc; /* light black/gray */
    }

    nav a.contact-icon svg circle {
      fill: #28a745; /* green */
    }

    main {
      padding: 2rem;
      max-width: 700px;
      margin: auto;
      background: #fff;
      border-radius: 8px;
      box-shadow: 0 8px 15px rgba(0,0,0,0.1);
      animation: fadeIn 0.8s ease;
    }

    @keyframes fadeIn {
      from {opacity: 0; transform: translateY(15px);}
      to {opacity: 1; transform: translateY(0);}
    }

    form {
      margin-bottom: 2rem;
      max-width: 600px;
    }

    input,
    select,
    textarea {
      display: block;
      margin-bottom: 1rem;
      padding: 0.6rem;
      width: 100%;
      box-sizing: border-box;
      border: 1.5px solid #ddd;
      border-radius: 5px;
      font-size: 1rem;
      transition: border-color 0.3s ease;
    }

    input:focus,
    select:focus,
    textarea:focus {
      border-color: #ff8c1a;
      outline: none;
    }

    button {
      padding: 0.6rem 1.3rem;
      margin-right: 1rem;
      border: none;
      cursor: pointer;
      color: white;
      font-weight: 600;
      border-radius: 5px;
      transition: background-color 0.3s ease;
      font-size: 1rem;
    }

    .submit-btn {
      background-color: #28a745;
    }

    .submit-btn:hover {
      background-color: #218838;
    }

    .cancel-btn {
      background-color: #dc3545;
    }

    .cancel-btn:hover {
      background-color: #c82333;
    }

    .output {
      background: #f9f9f9;
      padding: 1rem;
      border: 1px solid #ccc;
      max-width: 700px;
      white-space: pre-wrap;
      font-size: 1.1rem;
      border-radius: 6px;
      box-shadow: inset 0 0 5px #ddd;
      min-height: 100px;
    }

    .contact-links img {
      width: 30px;
      vertical-align: middle;
      margin-right: 10px;
    }

    .contact-item {
      margin: 10px 0;
    }
  </style>
</head>
<body>
  <header>
    <h1>My Simple Web App</h1>
  </header>

  <nav>
    <a class="home-icon" onclick="showSection('home')" title="Home">
      <!-- Home SVG Icon -->
      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" >
        <path d="M3 9l9-7 9 7"></path>
        <path d="M9 22V12h6v10"></path>
      </svg>
      Home
    </a>
    <a class="about-icon" onclick="showSection('about')" title="About">
      <!-- Down arrow SVG Icon -->
      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <polyline points="6 9 12 15 18 9"></polyline>
      </svg>
      About
    </a>
    <a class="contact-icon" onclick="showSection('contact')" title="Contact">
      <!-- Green circle SVG Icon -->
      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24">
        <circle cx="12" cy="12" r="10" />
      </svg>
      Contact
    </a>
  </nav>

  <main>
    <!-- Home Section -->
    <section id="homeSection">
      <h2>Fill Your Self-Intro Details</h2>
      <form id="introForm">
        <input type="text" id="name" placeholder="Your Name" required />
        <select id="gender" required>
          <option value="" disabled selected>Select Gender</option>
          <option>Male</option>
          <option>Female</option>
          <option>Other</option>
        </select>
        <input type="text" id="location" placeholder="Your Location" required />
        <select id="experienceType" required onchange="toggleExpFields()">
          <option value="" disabled selected>Are you Fresher or Experienced?</option>
          <option>Fresher</option>
          <option>Experienced</option>
        </select>
        <select id="industry" required onchange="populateDomainOptions()">
          <option value="" disabled selected>IT or Non-IT?</option>
          <option value="IT">IT</option>
          <option value="Non-IT">Non-IT</option>
        </select>

        <!-- Experienced fields -->
        <input
          type="number"
          id="yearsExp"
          placeholder="Years of Experience"
          style="display: none;"
          min="0"
        />

        <select id="workingStatus" style="display:none;" onchange="toggleCompanyField()">
          <option value="" disabled selected>Currently working?</option>
          <option>Yes</option>
          <option>No</option>
        </select>

        <input
          type="text"
          id="company"
          placeholder="Current or Previous Company"
          style="display:none;"
        />

        <select id="domain" style="display:none;" onchange="toggleAppSupportLevel()" required>
          <option value="" disabled selected>Select Domain</option>
          <!-- Dynamically filled -->
        </select>

        <select id="appSupportLevel" style="display:none;">
          <option value="" disabled selected>Application Support Level</option>
          <option>L1</option>
          <option>L2</option>
          <option>L3</option>
        </select>

        <textarea id="skills" placeholder="Your Skills / Expertise" required></textarea>

        <button type="submit" class="submit-btn">Generate Intro</button>
        <button type="button" class="cancel-btn" onclick="clearForm()">Cancel</button>
      </form>

      <div class="output" id="outputBox"></div>
    </section>

    <!-- About Section -->
    <section id="aboutSection" style="display:none;">
      <h2>About</h2>
      <p>
        This is a smart resume/self-intro generator web app developed using HTML,
        CSS, and JavaScript. It collects user input and generates a friendly,
        professional self-introduction.
      </p>
    </section>

    <!-- Contact Section -->
    <section id="contactSection" style="display:none;">
      <h2>Contact Me</h2>
      <p>Hi, I'm <strong>SNK</strong>. For more details, follow me on:</p>
      <div class="contact-links">
        <div class="contact-item">
          <img
            src="https://cdn-icons-png.flaticon.com/512/174/174857.png"
            alt="LinkedIn"
          />
          <a href="https://www.linkedin.com/in/naveen-kumar-s-18617421a/" target="_blank"
            >LinkedIn</a
          >
        </div>
        <div class="contact-item">
          <img
            src="https://cdn-icons-png.flaticon.com/512/25/25231.png"
            alt="GitHub"
          />
          <a href="https://github.com/Naveen-DevOps-IT" target="_blank">GitHub</a>
        </div>
        <div class="contact-item">
          <img
            src="https://cdn-icons-png.flaticon.com/512/174/174855.png"
            alt="Instagram"
          />
          <a href="https://www.instagram.com/_naveen4" target="_blank"
            >Instagram</a
          >
        </div>
      </div>
    </section>
  </main>

  <script>
    const form = document.getElementById("introForm");
    const outputBox = document.getElementById("outputBox");
    const domainSelect = document.getElementById("domain");
    const industrySelect = document.getElementById("industry");

    const itDomains = [
      "Front End Developer",
      "Back End Developer",
      "DevOps",
      "Site Reliability Engineer",
      "Network Engineer",
      "Application Support"
    ];

    const nonItDomains = [
      "Customer Service",
      "HR Specialist",
      "Marketing",
      "Sales Executive",
      "Operations Manager",
      "Content Writer"
    ];

    function populateDomainOptions() {
      const industry = industrySelect.value;
      domainSelect.innerHTML = '<option value="" disabled selected>Select Domain</option>';

      let domainsToUse = industry === "IT" ? itDomains : nonItDomains;

      domainsToUse.forEach(domain => {
        const opt = document.createElement("option");
        opt.value = domain;
        opt.textContent = domain;
        domainSelect.appendChild(opt);
      });

      if (industry) {
        domainSelect.style.display = "block";
      } else {
        domainSelect.style.display = "none";
      }
    }

    function toggleExpFields() {
      const expType = document.getElementById("experienceType").value;
      const yearsExp = document.getElementById("yearsExp");
      const workingStatus = document.getElementById("workingStatus");
      const company = document.getElementById("company");
      const skills = document.getElementById("skills");
      const domain = document.getElementById("domain");
      const appSupportLevel = document.getElementById("appSupportLevel");

      if (expType === "Experienced") {
        yearsExp.style.display = "block";
        workingStatus.style.display = "block";
        skills.style.display = "block";
        domain.style.display = industrySelect.value ? "block" : "none";
      } else {
        yearsExp.style.display = "none";
        workingStatus.style.display = "none";
        company.style.display = "none";
        domain.style.display = "none";
        appSupportLevel.style.display = "none";
        skills.style.display = "block";
      }
    }

    function toggleCompanyField() {
      const workingStatus = document.getElementById("workingStatus").value;
      const company = document.getElementById("company");
      if (workingStatus === "Yes") {
        company.style.display = "block";
      } else {
        company.style.display = "none";
      }
    }

    function toggleAppSupportLevel() {
      const domain = document.getElementById("domain").value;
      const appSupportLevel = document.getElementById("appSupportLevel");
      if (domain === "Application Support") {
        appSupportLevel.style.display = "block";
      } else {
        appSupportLevel.style.display = "none";
      }
    }

    form.addEventListener("submit", function (e) {
      e.preventDefault();

      const name = document.getElementById("name").value.trim();
      const gender = document.getElementById("gender").value;
      const location = document.getElementById("location").value.trim();
      const experienceType = document.getElementById("experienceType").value;
      const industry = industrySelect.value;
      const skills = document.getElementById("skills").value.trim();

      let introText = "";

      if (experienceType === "Fresher") {
        introText = `Hello, my name is ${name}. I am from ${location}. I am enthusiastic and eager to start my career in the ${industry} domain. I possess foundational skills and am keen to contribute effectively in a professional environment. I am confident in my ability to learn quickly and adapt to new challenges. My key areas of interest and skills include ${skills}. I am excited to bring my dedication and energy to a suitable role in this field.`;
      } else if (experienceType === "Experienced") {
        const yearsExp = document.getElementById("yearsExp").value;
        const workingStatus = document.getElementById("workingStatus").value;
        const company = document.getElementById("company").value.trim();
        const domain = document.getElementById("domain").value;
        const appSupportLevel = document.getElementById("appSupportLevel").value;

        introText = `Hello, I am ${name}, I am professionally based in ${location} with ${yearsExp} years of experience in the ${domain} domain within the ${industry} industry. `;

        if (workingStatus === "Yes" && company) {
          introText += `Currently, I am employed at ${company}, where I have been actively contributing to the team’s success. `;
        } else if (workingStatus === "No" && company) {
          introText += `Previously, I worked at ${company}, gaining valuable expertise. `;
        }

        if (domain === "Application Support" && appSupportLevel) {
          introText += `My role has involved providing ${appSupportLevel} level application support, resolving incidents, and ensuring smooth operational continuity. `;
        } else {
          // Add domain-specific responsibilities
          introText += getDomainResponsibilities(domain, industry);
        }

        introText += `My technical skills and expertise include: ${skills}. I am dedicated to continuous improvement and eager to take on challenging roles that align with my professional background.`;
      } else {
        introText = "Please fill all required fields correctly.";
      }

      outputBox.textContent = introText;
    });

    function getDomainResponsibilities(domain, industry) {
      // You can expand or modify this based on real responsibilities per domain
      const responsibilities = {
        "Front End Developer":
          "I specialize in designing and implementing user-friendly interfaces using HTML, CSS, and JavaScript frameworks.",
        "Back End Developer":
          "I develop and maintain server-side logic, databases, and APIs ensuring high performance and scalability.",
        "DevOps":
          "I automate deployment pipelines, manage cloud infrastructure, and ensure continuous integration and delivery.",
        "Site Reliability Engineer":
          "I monitor system health, improve reliability, and troubleshoot complex production issues.",
        "Network Engineer":
          "I manage and optimize network infrastructure to ensure secure and efficient data communication.",
        "Application Support":
          "I provide timely technical support, incident management, and work closely with development teams to resolve issues.",
        "Customer Service":
          "I handle client queries, resolve issues promptly, and ensure high customer satisfaction.",
        "HR Specialist":
          "I manage recruitment processes, employee relations, and maintain organizational policies.",
        "Marketing":
          "I strategize marketing campaigns, analyze market trends, and promote brand awareness.",
        "Sales Executive":
          "I identify client needs, drive sales targets, and maintain strong customer relationships.",
        "Operations Manager":
          "I oversee daily operations, optimize workflows, and ensure team productivity.",
        "Content Writer":
          "I create compelling and SEO-friendly content tailored to target audiences."
      };

      return responsibilities[domain] ? responsibilities[domain] + " " : "";
    }

    function clearForm() {
      form.reset();
      outputBox.textContent = "";
      document.getElementById("yearsExp").style.display = "none";
      document.getElementById("workingStatus").style.display = "none";
      document.getElementById("company").style.display = "none";
      document.getElementById("domain").style.display = "none";
      document.getElementById("appSupportLevel").style.display = "none";
    }

    function showSection(section) {
      const sections = {
        home: document.getElementById("homeSection"),
        about: document.getElementById("aboutSection"),
        contact: document.getElementById("contactSection")
      };

      Object.keys(sections).forEach(key => {
        sections[key].style.display = key === section ? "block" : "none";
      });
    }

    // Initialize default view
    showSection('home');
  </script>
</body>
</html>
